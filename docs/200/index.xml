<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Leetcode Book</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/</link><description>Recent content on Leetcode Book</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ramsayleung.github.io/leetcode_book/docs/200/index.xml" rel="self" type="application/rss+xml"/><item><title>203. Remove Linked List Elements</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/203_remove_linked_list_elements/</link><pubDate>Thu, 24 Mar 2022 21:24:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/203_remove_linked_list_elements/</guid><description>1 Description # Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.
Example 1:
Input: head = [1,2,6,3,4,5,6], val = 6 Output: [1,2,3,4,5] Example 2:
Input: head = [], val = 1 Output: [] Example 3:
Input: head = [7,7,7,7], val = 7 Output: [] Constraints:
The number of nodes in the list is in the range [0, 10^4].</description></item><item><title>229. Majority Element II</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/229_majority_element_ii/</link><pubDate>Sun, 10 Apr 2022 13:07:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/229_majority_element_ii/</guid><description>1 Description # source: https://leetcode.com/problems/majority-element-ii/
Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
Example 1:
Input: nums = [3,2,3] Output: [3] Example 2:
Input: nums = [1] Output: [1] Example 3:
Input: nums = [1,2] Output: [1,2] Constraints:
1 &amp;lt;= nums.length &amp;lt;= 5 * 10^4 -10^9 &amp;lt;= nums[i] &amp;lt;= 10^9 Follow up: Could you solve the problem in linear time and in O(1) space?</description></item><item><title>231. Power of Two</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/231_power_of_two/</link><pubDate>Sun, 10 Apr 2022 21:12:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/231_power_of_two/</guid><description>1 Description # source: https://leetcode.com/problems/power-of-two/
Given an integer n, return true if it is a power of two. Otherwise, return false.
An integer n is a power of two, if there exists an integer x such that n == 2^x.
Example 1:
Input: n = 1 Output: true Explanation: 20 = 1 Example 2:
Input: n = 16 Output: true Explanation: 24 = 16 Example 3:
Input: n = 3 Output: false Constraints:</description></item><item><title>268. Missing Number</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/268_missing_number/</link><pubDate>Sun, 10 Apr 2022 14:17:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/268_missing_number/</guid><description>1 Description # source: https://leetcode.com/problems/missing-number/
Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.
Example 1:
Input: nums = [3,0,1] Output: 2 Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.</description></item></channel></rss>