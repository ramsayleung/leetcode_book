<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Leetcode Book</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/</link><description>Recent content on Leetcode Book</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ramsayleung.github.io/leetcode_book/docs/200/index.xml" rel="self" type="application/rss+xml"/><item><title>201. Bitwise AND of Numbers Range</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/201_bitwise_and_of_numbers_range/</link><pubDate>Sun, 01 May 2022 13:54:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/201_bitwise_and_of_numbers_range/</guid><description>1 Description # source: https://leetcode.com/problems/bitwise-and-of-numbers-range/
Given two integers left and right that represent the range [left, right], return the bitwise AND of all numbers in this range, inclusive.
Example 1:
Input: left = 5, right = 7 Output: 4 Example 2:
Input: left = 0, right = 0 Output: 0 Example 3:
Input: left = 1, right = 2147483647 Output: 0 Constraints:
0 &amp;lt;= left &amp;lt;= right &amp;lt;= 2^31 - 1 2 Solution # #include &amp;lt;limits&amp;gt;class Solution { public: int rangeBitwiseAnd(int left, int right) { // Time complexity: O(32) =&amp;gt; O(1) // Space complexity: O(1) if(left == 0){ return 0; } int diff_bit_count = 0; while(left !</description></item><item><title>203. Remove Linked List Elements</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/203_remove_linked_list_elements/</link><pubDate>Thu, 24 Mar 2022 21:24:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/203_remove_linked_list_elements/</guid><description>1 Description # Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.
Example 1:
Input: head = [1,2,6,3,4,5,6], val = 6 Output: [1,2,3,4,5] Example 2:
Input: head = [], val = 1 Output: [] Example 3:
Input: head = [7,7,7,7], val = 7 Output: [] Constraints:
The number of nodes in the list is in the range [0, 10^4].</description></item><item><title>229. Majority Element II</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/229_majority_element_ii/</link><pubDate>Sun, 10 Apr 2022 13:07:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/229_majority_element_ii/</guid><description>1 Description # source: https://leetcode.com/problems/majority-element-ii/
Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
Example 1:
Input: nums = [3,2,3] Output: [3] Example 2:
Input: nums = [1] Output: [1] Example 3:
Input: nums = [1,2] Output: [1,2] Constraints:
1 &amp;lt;= nums.length &amp;lt;= 5 * 10^4 -10^9 &amp;lt;= nums[i] &amp;lt;= 10^9 Follow up: Could you solve the problem in linear time and in O(1) space?</description></item><item><title>230. Kth Smallest Element in a BST</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/230_kth_smallest_element_in_a_bst/</link><pubDate>Fri, 29 Apr 2022 23:34:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/230_kth_smallest_element_in_a_bst/</guid><description>1 Description # source: https://leetcode.com/problems/kth-smallest-element-in-a-bst/
Given the root of a binary search tree, and an integer k, return the k^th smallest value (1-indexed) of all the values of the nodes in the tree.
Example 1:
Input: root = [3,1,4,null,2], k = 1 Output: 1 Example 2:
Input: root = [5,3,6,2,4,null,null,1], k = 3 Output: 3 Constraints:
The number of nodes in the tree is n.</description></item><item><title>231. Power of Two</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/231_power_of_two/</link><pubDate>Sun, 10 Apr 2022 21:12:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/231_power_of_two/</guid><description>1 Description # source: https://leetcode.com/problems/power-of-two/
Given an integer n, return true if it is a power of two. Otherwise, return false.
An integer n is a power of two, if there exists an integer x such that n == 2^x.
Example 1:
Input: n = 1 Output: true Explanation: 20 = 1 Example 2:
Input: n = 16 Output: true Explanation: 24 = 16 Example 3:
Input: n = 3 Output: false Constraints:</description></item><item><title>235. Lowest Common Ancestor of a Binary Search Tree</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/235_lowest_common_ancestor_of_a_binary_search_tree/</link><pubDate>Sat, 30 Apr 2022 08:23:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/235_lowest_common_ancestor_of_a_binary_search_tree/</guid><description>1 Description # source: https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/
Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.
According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”</description></item><item><title>236. Lowest Common Ancestor of a Binary Tree</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/236_lowest_common_ancestor_of_a_binary_tree/</link><pubDate>Sat, 30 Apr 2022 08:30:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/236_lowest_common_ancestor_of_a_binary_tree/</guid><description>1 Description # source: https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/
Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.
According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”
Example 1:</description></item><item><title>260. Single Number III</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/260_single_number_iii/</link><pubDate>Sun, 01 May 2022 11:18:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/260_single_number_iii/</guid><description>1 Description # source: https://leetcode.com/problems/single-number-iii/ Given an integer array nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in any order.
You must write an algorithm that runs in linear runtime complexity and uses only constant extra space.
Example 1:
Input: nums = [1,2,1,3,2,5] Output: [3,5] Explanation: [5, 3] is also a valid answer.</description></item><item><title>268. Missing Number</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/268_missing_number/</link><pubDate>Sun, 10 Apr 2022 14:17:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/268_missing_number/</guid><description>1 Description # source: https://leetcode.com/problems/missing-number/
Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.
Example 1:
Input: nums = [3,0,1] Output: 2 Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.</description></item><item><title>278. First Bad Version</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/278_first_bad_version/</link><pubDate>Sat, 16 Apr 2022 21:05:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/278_first_bad_version/</guid><description>1 Description # source: https://leetcode.com/problems/first-bad-version/
You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.
Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.</description></item><item><title>287. Find the Duplicate Number</title><link>https://ramsayleung.github.io/leetcode_book/docs/200/287_find_the_duplicate_number/</link><pubDate>Sat, 16 Apr 2022 08:49:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/200/287_find_the_duplicate_number/</guid><description>1 Description # source: https://leetcode.com/problems/find-the-duplicate-number/
Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.
There is only one repeated number in nums, return this repeated number.
You must solve the problem without modifying the array nums and uses only constant extra space.
Example 1:
Input: nums = [1,3,4,2,2] Output: 2 Example 2:
Input: nums = [3,1,3,4,2] Output: 3 Constraints:</description></item></channel></rss>