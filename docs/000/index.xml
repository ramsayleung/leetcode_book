<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Leetcode Book</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/</link><description>Recent content on Leetcode Book</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ramsayleung.github.io/leetcode_book/docs/000/index.xml" rel="self" type="application/rss+xml"/><item><title>2. Add two number</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/2_add_two_numbers/</link><pubDate>Fri, 24 Apr 2020 21:45:43 +0000</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/2_add_two_numbers/</guid><description>1 Description # source: https://leetcode.com/problems/add-two-numbers/
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
Example:
Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 8 Explanation: 342 + 465 = 807.</description></item><item><title>12. Integer to Roman</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/12_integer_to_roman/</link><pubDate>Sun, 10 Apr 2022 15:12:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/12_integer_to_roman/</guid><description>1 Description # source: https://leetcode.com/problems/integer-to-roman/
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000 For example, 2 is written as II in Roman numeral, just two one&amp;rsquo;s added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</description></item><item><title>24. Swap Nodes in Pairs</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/24_swap_nodes_in_pairs/</link><pubDate>Tue, 22 Mar 2022 09:03:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/24_swap_nodes_in_pairs/</guid><description>1 Description # Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list&amp;rsquo;s nodes (i.e., only nodes themselves may be changed.)
Example 1:
Input: head = [1,2,3,4] Output: [2,1,4,3] Example 2:
Input: head = [] Output: [] Example 3:
Input: head = [1] Output: [1] Constraints:
The number of nodes in the list is in the range [0, 100].</description></item><item><title>26. Remove Duplicates from Sorted Array</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/26_remove_duplicates_from_sorted_array/</link><pubDate>Sat, 19 Mar 2022 09:02:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/26_remove_duplicates_from_sorted_array/</guid><description>1 Description # source: https://leetcode.com/problems/remove-duplicates-from-sorted-array/
Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.
Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result.</description></item><item><title>33. Search in Rotated Sorted Array</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/33_search_in_rotated_sorted_array/</link><pubDate>Sat, 16 Apr 2022 08:57:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/33_search_in_rotated_sorted_array/</guid><description>1 Description # source: https://leetcode.com/problems/search-in-rotated-sorted-array/
There is an integer array nums sorted in ascending order (with distinct values).
Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 &amp;lt;= k &amp;lt; nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].
Given the array nums after the possible rotation and an integer, return the index of target if it is in nums, or -1 if it is not in nums.</description></item><item><title>34. Find First and Last Position of Element in Sorted Array</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/34_find_first_and_last_position_of_element_in_sorted_array/</link><pubDate>Mon, 27 Apr 2020 16:05:11 +0000</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/34_find_first_and_last_position_of_element_in_sorted_array/</guid><description>1 Description # source: https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/
Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
Your algorithm&amp;rsquo;s runtime complexity must be in the order of O(log n).
If the target is not found in the array, return [-1, -1].
Example 1:
Input: nums = [5,7,7,8,8,10], target = 8 Output: [3,4] Example 2:
Input: nums = [5,7,7,8,8,10], target = 6 Output: [-1,-1] 2 Solution # # Runtime: 80 ms, faster than 95.</description></item><item><title>35. Search Insert Position</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/35.search_insert_position/</link><pubDate>Wed, 02 Feb 2022 20:34:17 +0000</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/35.search_insert_position/</guid><description>1 Description # source: https://leetcode.com/problems/search-insert-position/
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [1,3,5,6], target = 5 Output: 2 Example 2:
Input: nums = [1,3,5,6], target = 2 Output: 1 Example 3:</description></item><item><title>43. Multiply String</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/43.multiply_strings/</link><pubDate>Tue, 01 Mar 2022 19:27:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/43.multiply_strings/</guid><description>1 Description # source: https://leetcode.com/problems/multiply-strings/ Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.
Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.
Example 1:
Input: num1 = &amp;#34;2&amp;#34;, num2 = &amp;#34;3&amp;#34; Output: &amp;#34;6&amp;#34; Example 2:
Input: num1 = &amp;#34;123&amp;#34;, num2 = &amp;#34;456&amp;#34; Output: &amp;#34;56088&amp;#34; Constraints:
1 &amp;lt;= num1.</description></item><item><title>61. Rotate List</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/61_rotate_list/</link><pubDate>Tue, 15 Feb 2022 22:12:26 +0000</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/61_rotate_list/</guid><description>1 Description # source: https://leetcode.com/problems/rotate-list/
Given the head of a linked list, rotate the list to the right by k places.
Example 1:
Input: head = [1,2,3,4,5], k = 2 Output: [4,5,1,2,3] Example 2:
Input: head = [0,1,2], k = 4 Output: [2,0,1] Constraints:
The number of nodes in the list is in the range [0, 500]. -100 &amp;lt;= Node.val &amp;lt;= 100 0 &amp;lt;= k &amp;lt;= 2 * 10^9 2 Solution # /** * Definition for singly-linked list.</description></item><item><title>67. Add Binary</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/67_add_binary/</link><pubDate>Tue, 01 Mar 2022 21:03:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/67_add_binary/</guid><description>1 Description # source: https://leetcode.com/problems/add-binary/ Given two binary strings a and b, return their sum as a binary string.
Example 1:
Input: a = &amp;#34;11&amp;#34;, b = &amp;#34;1&amp;#34; Output: &amp;#34;100&amp;#34; Example 2:
Input: a = &amp;#34;1010&amp;#34;, b = &amp;#34;1011&amp;#34; Output: &amp;#34;10101&amp;#34; Constraints:
1 &amp;lt;= a.length, b.length &amp;lt;= 10^4 a and b consist only of '0' or '1' characters. Each string does not contain leading zeros except for the zero itself.</description></item><item><title>83. Remove Duplicates from Sorted List</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/83_remove_duplicates_from_sorted_list/</link><pubDate>Tue, 22 Mar 2022 23:19:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/83_remove_duplicates_from_sorted_list/</guid><description>1 Description # source: https://leetcode.com/problems/remove-duplicates-from-sorted-list/
Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.
Example 1:
Input: head = [1,1,2] Output: [1,2] Example 2: Input: head = [1,1,2,3,3] Output: [1,2,3] Constraints:
The number of nodes in the list is in the range [0, 300]. -100 &amp;lt;= Node.val &amp;lt;= 100 The list is guaranteed to be sorted in ascending order.</description></item><item><title>86. Partition List</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/86_partition_list/</link><pubDate>Thu, 24 Mar 2022 21:05:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/86_partition_list/</guid><description>1 Description # source: https://leetcode.com/problems/partition-list/
Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.
You should preserve the original relative order of the nodes in each of the two partitions.
Example 1:
Input: head = [1,4,3,2,5,2], x = 3 Output: [1,2,2,4,3,5] Example 2:
Input: head = [2,1], x = 2 Output: [1,2] Constraints:</description></item><item><title>92. Reverse Linked List II</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/92_reverse_linked_list_ii/</link><pubDate>Wed, 23 Mar 2022 12:52:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/92_reverse_linked_list_ii/</guid><description>1 Description # source: https://leetcode.com/problems/reverse-linked-list-ii/
Given the head of a singly linked list and two integers left and right where left &amp;lt; right=, reverse the nodes of the list from position left to position right, and return the reversed list.
Example 1:
Input: head = [1,2,3,4,5], left = 2, right = 4 Output: [1,4,3,2,5] Example 2:
Input: head = [5], left = 1, right = 1 Output: [5] Constraints:</description></item></channel></rss>