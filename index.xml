<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Leetcode Book</title><link>https://ramsayleung.github.io/leetcode_book/</link><description>Recent content in Introduction on Leetcode Book</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ramsayleung.github.io/leetcode_book/index.xml" rel="self" type="application/rss+xml"/><item><title>2. Add two number</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/2_add_two_numbers/</link><pubDate>Fri, 24 Apr 2020 21:45:43 +0000</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/2_add_two_numbers/</guid><description>1 Description # source: https://leetcode.com/problems/add-two-numbers/
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
Example:
Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 8 Explanation: 342 + 465 = 807.</description></item><item><title>43. Multiply String</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/43.multiply_strings/</link><pubDate>Tue, 01 Mar 2022 19:27:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/43.multiply_strings/</guid><description>1 Description # source: https://leetcode.com/problems/multiply-strings/ Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.
Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.
Example 1:
Input: num1 = &amp;#34;2&amp;#34;, num2 = &amp;#34;3&amp;#34; Output: &amp;#34;6&amp;#34; Example 2:
Input: num1 = &amp;#34;123&amp;#34;, num2 = &amp;#34;456&amp;#34; Output: &amp;#34;56088&amp;#34; Constraints:
1 &amp;lt;= num1.</description></item><item><title>61. Rotate List</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/61_rotate_list/</link><pubDate>Tue, 15 Feb 2022 22:12:26 +0000</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/61_rotate_list/</guid><description>1 Description # source: https://leetcode.com/problems/rotate-list/
Given the head of a linked list, rotate the list to the right by k places.
Example 1:
Input: head = [1,2,3,4,5], k = 2 Output: [4,5,1,2,3] Example 2:
Input: head = [0,1,2], k = 4 Output: [2,0,1] Constraints:
The number of nodes in the list is in the range [0, 500]. -100 &amp;lt;= Node.val &amp;lt;= 100 0 &amp;lt;= k &amp;lt;= 2 * 10^9 2 Solution # /** * Definition for singly-linked list.</description></item><item><title>67. Add Binary</title><link>https://ramsayleung.github.io/leetcode_book/docs/000/67_add_binary/</link><pubDate>Tue, 01 Mar 2022 21:03:00 +0800</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/000/67_add_binary/</guid><description>1 Description # source: https://leetcode.com/problems/add-binary/ Given two binary strings a and b, return their sum as a binary string.
Example 1:
Input: a = &amp;#34;11&amp;#34;, b = &amp;#34;1&amp;#34; Output: &amp;#34;100&amp;#34; Example 2:
Input: a = &amp;#34;1010&amp;#34;, b = &amp;#34;1011&amp;#34; Output: &amp;#34;10101&amp;#34; Constraints:
1 &amp;lt;= a.length, b.length &amp;lt;= 10^4 a and b consist only of '0' or '1' characters. Each string does not contain leading zeros except for the zero itself.</description></item><item><title>141. Linked list cycle</title><link>https://ramsayleung.github.io/leetcode_book/docs/100/141_linked_list_cycle/</link><pubDate>Tue, 28 Apr 2020 09:04:58 +0000</pubDate><guid>https://ramsayleung.github.io/leetcode_book/docs/100/141_linked_list_cycle/</guid><description>1 Description # source: https://leetcode.com/problems/linked-list-cycle/
Given a linked list, determine if it has a cycle in it.
To represent a cycle in the given linked list, we use an integer pos which represents the position (0-indexed) in the linked list where tail connects to. If pos is -1, then there is no cycle in the linked list.
Example 1:
Input: head = [3,2,0,-4], pos = 1 Output: true Explanation: There is a cycle in the linked list, where tail connects to the second node.</description></item></channel></rss>